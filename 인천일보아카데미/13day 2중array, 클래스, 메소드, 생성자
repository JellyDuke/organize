13일차
2차원 배열
package p0509;
public class Ex01_Array {
	public static void main(String[] args) {
		int[] numbers = { 11, 12, 13};
		System.out.println(numbers[0]);
		
		System.out.println("2차원");
		int[][] scores2 = {{1,2,3},
						   {4,5,6,7,8},
						   {9,10}};
		//idx [0]   [1]   [2]
//			  |1|   |2|   |3|
//			  |4|   |5|   |6|   |7|   |8|
//			  |9|  |10|
		System.out.println("scores2");
		System.out.println(scores2[0][0]);
		System.out.println(scores2[0][1]);
		System.out.println(scores2[0][2]);
//		System.out.println(scores2[0][3]);
		
		System.out.println("행의 개수 "+ scores2.length);
		System.out.println("0행의 크기 : " + scores2[0].length);
		System.out.println("1행의 크기 : " + scores2[1].length);
		System.out.println("2행의 크기 : " + scores2[2].length);
	}
}

package p0509;
public class Ex02_Array {
	public static void main(String[] args) {
//		String[] strArr = new String[5];
		String[][] strArr = new String[2][3];
//		  |A|   | |   | |             2행 3열 (2X3)
//		  | |   | |   | |
		strArr[0][0] = "A";
//		strArr[0][3] = "A"; >> ArrayIndexOut
				//index 번호 0~2 까지 이므로 3은 사용 x
		System.out.println(strArr.length);
		System.out.println(strArr[0].length);
		System.out.println(strArr[1].length);
		
		System.out.println("strArr2");
		String[][] strArr2 = new String[3][];
//		[0]행
//		[1]행
//		[2]행
		System.out.println(strArr2.length);
//		System.out.println(strArr2[0].length); 
		
		strArr2[0] = new String[2];
		strArr2[1] = new String[5];
		strArr2[1] = new String[3];
		System.out.println(strArr2[0].length); 
		System.out.println(strArr2[1].length); 
//		[0]행 |    |    |
//		[1]행 |    |    |    |    |    |
//		[2]행
	}
}
package p0509;
public class Ex03_Array {
	public static void main(String[] args) {
		String[][] strArr = {{"A","B","C"},
					          		 {"D","E" }, 
				          			 {"F","G","H","I" }};
//		0행의 모든 문자 출력
		System.out.println("0행");
		for(int i = 0; i<strArr[0].length; i++) {
			System.out.println(strArr[0][i]);
		}
		System.out.println("1행");
		for(int i = 0; i<strArr[1].length; i++) {
			System.out.println(strArr[1][i]);
		}
		System.out.println("2행");
		for(int i = 0; i<strArr[2].length; i++) {
			System.out.println(strArr[2][i]);
		}
		System.out.println("3행");
		for(int i = 0; i<strArr.length; i++) {//행번호의 반복
			for(int j = 0; j<strArr[i].length; j++) {
				System.out.println(strArr[i][j]);
			}
		}
	}
}

package p0509;
public class Ex04_Class {
/*
 * 1. 필드
 * 2. 생성자
 * 3. 메소드
 * */
//	1.필드는 파란색으로 나옴, 초기값 혹은 선언도 할 수 있음
//	데이터를 저장하는 공간
	int age; 
//	2. 생성자 - 기본생성자 public을 뺄 수도 있음. 안써도됨.
//	생성자: 생성자의 이름은 클래스와 동일해야함.
//		  객체를 만들 때 따라야 하는 규칙
	public Ex04_Class() {
	}
//  3. 메소드 : 특정한 기능을 정의
//	- 리턴값이 없는 메소드
	void myName(){
	}
//	- 리턴값이 있는 메소드
	int myAge() { //int, String, 변수 등등
		return 10; //String 일경우 "ABC ..." 반환 
	}
}

 ----------------------------------------------------------------------------
package p0509;
public class MyInfo {
	String name; //이름
	int age;     //나이
	
	private String phone;//전화번호 private -> 접근 제한
	String phone2;//전화번호
	
	void printMyInfo() { // 내정보 출력 기능
		System.out.println("내정보 출력");
		System.out.println("이름 : " + name);
		System.out.println("나이 : " + age);
	}
}

package p0509;
public class MyInfoMain {
	public static void main(String[] args) {
		int score = 100;
		System.out.println(score);
		String str = "B";
		System.out.println(str);
		MyInfo info01 = new MyInfo();// MyInfi생성자
//		info01의 필드값 출력
		System.out.println(info01.name);
		System.out.println(info01.age);
//		info01의 printMyInfo() 호출
		info01.printMyInfo();
		
		
		System.out.println("필드값 저장");
//		info01의 name필드에 이름을 저장		
		info01.name = "박주호";
		System.out.println(info01.name);
//		info01의 age필드에 나이 저장
		info01.age = 38;
		System.out.println(info01.age);
//		info01의 printMyInfo()를 호출
		info01.printMyInfo();
		
		System.out.println();
		MyInfo info02 = new MyInfo();
		info01.printMyInfo();
		info02.printMyInfo();
		
	}
}
--------------------------------------------------------------------------------
