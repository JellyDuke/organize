11일차
package p0503;
public class Ex01_Array {
	public static void main(String[] args) {
//		Array 배열
//		같은 타입의 데이터를 하나의 변수에 저장하는 구조
//		타입[] 배열이름 = {값1,값2}
		
		int[] numbers = {11, 12, 13, 14, 15};
//		: 11 : 12 : 13 : 14 : 15 :
//	idx  [0]  [1]  [2]  [3]  [4] index => 공간의 명칭 numbers에 저장한 11을 [0]번 인덱스라 부름
		System.out.println("numbers[0] : " + numbers[0]);
		numbers[0] = 21;
		System.out.println("numbers[0] : " + numbers[0]);

//		크기가 5인 int 타입의 배열을 선언, int값이 5개가 들어 갈 수 있다는 말을 뜻함.
//		인덱스를 5개로 선언했을 시 늘릴 수 없음.
		int[] numArr1 = new int[5]; //new int[5] <- 5개가 들어가는 배열을 미리 만들어 둠.
//		:     :     :     :     :     : 공간만 만든거임
//	idx   [0]   [1]   [2]   [3]   [4]
		System.out.println("numArr1[0] : " + numArr1[0]);
		numArr1[0] = 100;
		numArr1[1] = 200;
		
		System.out.println("배열의 크기 : " + numArr1.length);
	}
}
package p0503;
import java.util.Scanner;
import javax.naming.ldap.SortControl;
public class Ex02_Array {

	public static void main(String[] args) {
		// 80, 88, 90, 78, 100 score
		int[] scores = { 80, 88, 90, 78, 100 };
//		System.out.println(scores[0]);
//		System.out.println(scores[1]);
//		System.out.println(scores[2]);
//		System.out.println(scores[3]);
//		System.out.println(scores[4]);
		System.out.println("시작");
		for (int i = 0; i < scores.length; i++) {
			System.out.println("scores[" + i + "]" + scores[i]);
		}
		System.out.println("종료");
		// scores 배열에 90이 몇번 인덱스에 있는지를 출력
		// 90 >> 95로 변경
		System.out.println("\n인덱스 찾기 시작.");
		Scanner scan = new Scanner(System.in);
		int indexFix = scan.nextInt();

		for (int i = 0; i < scores.length; i++) {
			if (i == indexFix) {
				System.out.println(scores[i] + "입니다.");
				if (indexFix == 2) {
					scores[2] = 95;
					System.out.println(scores[i] + " 바꾼 인덱스");
				}
			}
		}
		System.out.println("종료.");
		
		System.out.println("\n시작");
		System.out.println("총점, 평균");
		// scores 배열이 모든 값을 더한 총점, 평균
		int sum = 0;//총점 double 실수형
		for (int i = 0; i < scores.length; i++) {
			sum = sum + scores[i];
		}
		System.out.println(sum+ "총점");
		//int 값을 실수까지 형태로 표현 못함 그래서 double 사용
		//정수에서 실수는 쉽지만 실수에서 정수로는 힘듦. 데이터 변환에 차이가 생김
		double avg = (double)sum / scores.length;
		System.out.println(avg + "평균");
		
		System.out.println("종료");
	}
}

package p0503;
import java.util.Scanner;
public class Ex03_Array {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		System.out.println("과목수 입력>>");
		int size = scan.nextInt();
		int [] scores = new int[size];
		//점수 입력
		for(int i = 0; i < scores.length; i++) {
			System.out.println((i+1)+"번째 과목의 점수>>");
			scores[i] = scan.nextInt();
		}
		//입력된 점수 출력
		for(int i = 0; i< scores.length; i++) {
			System.out.println("scores["+i+"]"+scores[i]);
		}
		//최대값 MAX, 최소값 MIN
//		int[] scores = {80,88,90,78,100};
		int max = scores[0];//최대값을 찾아서 저장하기 위한 변수
		int min = scores[0];
//		1. max, scores[0]값을 비교 max < scores[0] :: max = 80
//		2. max, scores[1]값을 비교 max < scores[1] :: max = scores[1]
//		3. max, scores[2]값을 비교 max < scores[2] :: max = scores[2]
//		4. max, scores[3]값을 비교 max < scores[3] :: max = scores[3]
//		5. max, scores[4]값을 비교 max < scores[4] :: max = scores[4]
		for(int i = 0; i<scores.length; i++) {
			if(max < scores[i]) {
				max = scores[i];
			}
			else if(min > scores[i]) {
				min = scores[i];
			}
		}
		System.out.println("최대 값: "+max+ " 최소 값: "+min);
	}

}

package p0503;
import java.util.Scanner;
public class Ex04_Scores {
	public static void main(String[] args) {
		/*1.과목수 배열 생성
		 *2.성적을 입력
		 *3.모든 과목의 성적 출력
		 *4.성적분석 (총점, 평균, 최대값, 최소값)
		 **/
		Scanner scan = new Scanner(System.in);
		boolean run = true;
		int[] scores = null;
		int size = 0;
		while(run) {
			//1. 메뉴 출력
			System.out.println("--------------------------------------");
			System.out.println("[1]과목수입력 [2]성적입력 [3]성적출력\n[4]성적분석 [5]종료");
			System.out.println("--------------------------------------");
			System.out.println("메뉴선택>>");
			int selectMenu = scan.nextInt();
			switch(selectMenu) {
			case 1://[1]과목수입력 선택 (배열 생성)
				System.out.println("과목수 입력>>");
				size = scan.nextInt();
				scores = new int[size];//int배열이 여기서 사용 할 수 없으니 위에 선언하고 다시 size로 저장.
				break;
			case 2://[2]성적입력 선택
				if(scores != null) {
					for(int i = 0; i <scores.length; i++) {
						System.out.println((i+1)+"번째 과목의 점수>>");
						scores[i] = scan.nextInt();
					}
				}
				else{
					System.err.println("[1]과목수를 먼저 지정하세요.");
				}
				break;
			case 3://[3]성적출력 선택
					if(scores != null) {
						for(int i = 0; i< scores.length; i++) {
							System.out.println((i+1)+" 번째 점수는"+scores[i]);
						}
					}
				else{
					System.out.println("1번 혹은 2번 부터 입력해주세요.");
				}
				break;
			case 4://[4]성적분석 선택
				
				break;
			default://[5]종료
			}
		}
	}
}
